<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Models\{{modelNameSingular}};
use Validator;

class {{modelNameSingular}}Controller extends Controller
{
    /**
     * Display a listing of the resource.
     */
    public function index()
    {
        return view('{{modelNameSingularLowerCase}}.index', [
            '{{modelNamePluralLowerCase}}' => {{modelNameSingular}}::all()
        ]);
    }

    /**
     * Display the specified resource.
     */
    public function show($id)
    {
        ${{modelNameSingularLowerCase}} = {{modelNameSingular}}::findOrFail($id);

        return response()->json(${{modelNameSingularLowerCase}});
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store(Request $request)
    {
        $rules = array({{modelRules}}
        );

        $validator = Validator::make($request->all(), $rules);

        if ($validator->fails()) {
            return response()->json(array(
                'errors' => $validator->getMessageBag()->toArray(),
            ));
        } else {
            ${{modelNameSingularLowerCase}} = {{modelNameSingular}}::create($request->all());
            return response()->json(${{modelNameSingularLowerCase}});
        }
    }

    /**
     * Update the specified resource in storage.
     */
    public function update(Request $request, $id)
    {
        $rules = array({{modelRules}}
        );

        $validator = Validator::make($request->all(), $rules);

        if ($validator->fails()) {
            return response()->json(array(
                'errors' => $validator->getMessageBag()->toArray(),
            ));
        } else {
            ${{modelNameSingularLowerCase}} = {{modelNameSingular}}::findOrFail($id);
            ${{modelNameSingularLowerCase}}->update($request->all());

            return response()->json(${{modelNameSingularLowerCase}});
        }
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy($id)
    {
        ${{modelNameSingularLowerCase}} = {{modelNameSingular}}::findOrFail($id);
        ${{modelNameSingularLowerCase}}->delete();

        return response()->json();
    }
}

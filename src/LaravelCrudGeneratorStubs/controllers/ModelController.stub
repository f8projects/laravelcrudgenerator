<?php

namespace App\Http\Controllers;

use App\Repositories\Repository;
use App\Http\Requests\{{modelName}}StoreRequest;
use App\Http\Requests\{{modelName}}UpdateRequest;
use App\Models\{{modelName}};

class {{modelName}}Controller extends Controller
{
    // space that we can use the repository from
    protected $model;

    public function __construct({{modelName}} ${{modelNameSingularLowerCase}})
    {
        // set the model
        $this->model = new Repository(${{modelNameSingularLowerCase}});
    }

    /**
     * Display a listing of the resource.
     */
    public function index()
    {
        return view('{{modelNameSingularLowerCase}}.index', ['{{modelNamePluralLowerCase}}' => $this->model->all()]);
    }

    /**
     * Show the form for creating a new resource.
     */
    public function create()
    {
        return view('{{modelNameSingularLowerCase}}.create');
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store({{modelName}}StoreRequest $request)
    {
        $this->model->create($request->only($this->model->getModel()->fillable));

        return redirect()->route('{{modelNamePluralLowerCase}}.index')
            ->with('success', '{{modelName}} created successfully');
    }

    /**
     * Display the specified resource.
     */
    public function show($id)
    {
        ${{modelNameSingularLowerCase}} = $this->model->show($id);
        return view('{{modelNameSingularLowerCase}}.show', compact('{{modelNameSingularLowerCase}}'));
    }

    /**
     * Show the form for editing the specified resource.
     */
    public function edit($id)
    {
        ${{modelNameSingularLowerCase}} = $this->model->show($id);
        return view('{{modelNameSingularLowerCase}}.edit', compact('{{modelNameSingularLowerCase}}'));
    }

    /**
     * Update the specified resource in storage.
     */
    public function update({{modelName}}UpdateRequest $request, $id)
    {
        $this->model->update($request->only($this->model->getModel()->fillable), $id);

        return redirect()->route('{{modelNamePluralLowerCase}}.index')
            ->with('success', '{{modelName}} updated successfully');
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy($id)
    {
        $this->model->delete($id);

        return redirect()->route('{{modelNamePluralLowerCase}}.index')
            ->with('success', '{{modelName}} deleted successfully');
    }
}
